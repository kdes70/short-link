version: '3.7'

services:

  # The Web Server Nginx
  nginx:
    restart: unless-stopped
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./backend:/var/www/app:ro
      - ./frontend:/home/node/app:ro
      - ./docker/nginx/site.conf:/etc/nginx/conf.d/default.conf
    links:
      - php
    depends_on:
      - php
    networks:
      - net_backend
      - net_frontend

  # The PHP FPM Application
  php:
    container_name: short_link_php
    build:
      context: ./docker/app
      dockerfile: Dockerfile
      args:
        uid: ${PHP_UID:-1000}
        gid: ${PHP_GID:-1000}
    image: short_link_php
    restart: unless-stopped
    working_dir: /var/www/app
    volumes:
      - ./backend:/var/www/app
      - ./docker/app/php.ini:/usr/local/etc/php/php.ini
    environment:
      COMPOSER_MEMORY_LIMIT: 2G
    links:
      - mysql
    depends_on:
      - mysql
    networks:
      - net_backend

  # The Database
  mysql:
    container_name: short_link_mysql
    image: mysql:latest
    volumes:
      - short_link_mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    networks:
      - net_backend

  # The Nodejs Frontend
  node:
    container_name: short_link_node
    env_file:
      - ./frontend/.env.local
    image: node:current-alpine
    user: ${PHP_UID:-110}:${PHP_UID:-110}
    working_dir: /home/node/app
    ports:
      - 8080:8080
    volumes:
      - ./frontend:/home/node/app
    environment:
      NODE_ENV: development
    command: "npm run serve"
    networks:
      - net_frontend

#Docker Volumes
volumes:
  short_link_mysql_data:
    driver: local

#Docker Networks
networks:
  net_frontend:
    driver: bridge
  net_backend:
    driver: bridge